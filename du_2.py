
import math
print("hallo world")

#Syntax a matematicke operatory

#parita

""" a = 2 ** 8
b = 5 + 5
c = 10 * 5 * 5
d = 5
celkovy_vysledek =  2**8 - (5 + 5) * 5 * 5 + 5 # 
# pozn 256 - (250) + 5 
print(a)
print(b)
print(c)
print(d)

print(celkovy_vysledek) """

#ukoly 

""" Ot√°zky:
Kter√© z tƒõchto ƒç√≠sel je nejvƒõt≈°√≠?
‚Ä¢ A) 5/3
‚Ä¢ B) 5//3
‚Ä¢ C) 5%3
‚Ä¢ D) 5,3 
D ... 5,3  je nejvestsi
"""


list_alfa = [5/3, 5//3, 5%3, 5.3]
nejvetsi_cislo = list_alfa[0]  # P≈ôedpokl√°d√°me, ≈æe prvn√≠ prvek je nejvetsi

for cislo in list_alfa:
    if cislo > nejvetsi_cislo:
        nejvetsi_cislo = cislo

print("Nejmen≈°√≠ ƒç√≠slo v listu je:", nejvetsi_cislo)


""" Kter√© z tƒõchto ƒç√≠sel je nejmen≈°√≠?
‚Ä¢ A) 6.12
‚Ä¢ B) 6.1e2
‚Ä¢ C) 6.1 e 2 # tohle budu syntax error
‚Ä¢ D) 6.1 ** 2 """

list_alfa = [6.12, 6.1e2, 6.1 ** 2]
nejmensi_cislo = list_alfa[0]  # P≈ôedpokl√°d√°me, ≈æe prvn√≠ prvek je nejmen≈°√≠

for cislo in list_alfa:
    if cislo < nejmensi_cislo:
        nejmensi_cislo = cislo

print("Nejmen≈°√≠ ƒç√≠slo v listu je:", nejmensi_cislo)


##########################################################################################


""" Ot√°zky:
a, b = 5, 2
a += b
b = a
a -= 1
Co bude v promƒõnn√Ωch a, b po vykon√°n√≠ uveden√©ho k√≥du?
‚Ä¢ A) 5, 2
‚Ä¢ B) 1, 2
‚Ä¢ C) 6, 7
‚Ä¢ D) 6, 6 """

a, b = 5, 2

print(a)
print("**************************************************")
print(b)
print("**************************************************")
a += b
print(a)
print("**************************************************")
b = a
print(b)
print("**************************************************")
a -= 1
# print(a)
# print("**************************************************")
sin_nula = math.sin(0)
sin_tricet = math.sin(30)
sin_ctyricetpet = math.sin(45)
sin_sedesat = math.sin(60)
sin_devadesat = math.sin(90)

print(sin_nula ,sin_tricet , sin_ctyricetpet, sin_sedesat , sin_devadesat)

####################################################################################################

# Ot√°zky:
# Kter√Ω z tƒõchto p≈ô√≠kaz≈Ø vyp√≠≈°e na v√Ωstup 200?
# ‚Ä¢ A) print 200
# ‚Ä¢ B) print(100+100)
# ‚Ä¢ C) print('100+100')
# ‚Ä¢ D) print(float(200))

print(float(200))
print(100+100)

# Kter√° z tƒõchto hodnot je typu int?
# ‚Ä¢ A) int***********************to neni nic
# ‚Ä¢ B) type(int)*****************to vypise co je tam za typ...jestli to beru jako ze int je integer cele nejake cislo pak 
# ‚Ä¢ C) int(24/7)***************** y toho vzpadne float
# ‚Ä¢ D) '9'***********************tohle je vlastne string
# Logick√© hodnot

#####################################################################################################
print("*****************   procviceni   *****************************")
### PROCVICENI ###

print(2**2 == 2*2)
print(5e-6 >= abs(-5e6))
import math
print(type(10/2) == type(math.pi))
print(10/2)
print(type(math.pi))
######################################################################################################
print("  * ********************************************************* * ")
x = 5 #5
print(x)
x -= 1#4
print(x)
x *= x#16
print(x)
y = 10 - x#--6
print(y)
y > 0#false
print(y>0)
print("  * ********************************************************* * ")
######################################################################################################

n = 20#20
n_lost = 7#7
n_final = n - n_lost#13
n_final != 13#false

print(n_final !=13)

print("  * ********************************************************* * ")
######################################################################################################

height = width = 10#10
area = height * width#100
#a = height > 5 and area = 100#True***************tady to nebere syntaxi

if height > 5 and area == 100:
    print("mas to spravne")

print("  * ********************************************************* * ")
######################################################################################################

a = True
b = False
a and b or not a and not b # true a zaroven false nebo false a zaroven true-------------co tim chce rict?dej priklad

print(a and b or not a and not b)
print("  * ********************************************************* * ")
######################################################################################################

x = 5
y = 10
y < x * x or y <= 2 * x and x > y# true krat pet nebo 10 vetsi nebo rovno deset a zaroven true
# true nebo true a zaroven true ********* jak to ze kdyz udelam false true false ... je to co? ja myslim false
print("sakra co")
print(y < x * x or y >= 2 * x and x > y)

print("  * ********************************************************* * ")
######################################################################################################


# Nepovinn√© √∫koly
# Cviƒçen√≠ 2.1: Obd√©ln√≠k
# V t√©to uk√°zce si nap√≠≈°eme program pro v√Ωpoƒçet obvodu a povrchu obd√©ln√≠ku:
# Obvod ùëú a povrch ùëÜ obd√©ln√≠ku o stran√°ch ùëé, ùëè m≈Ø≈æeme spoƒç√≠tat podle vzorc≈Ø:
# ùëú = 2ùëé + 2ùëè
# ùëÜ = ùëéùëè
# √ökol:
# Spoƒç√≠tejte obvod a povrch obd√©ln√≠ku o stran√°ch a, b. V√Ωsledky ulo≈æte do promƒõnn√Ωch
# o, S.
# (O vstup a v√Ωstup se star√° p≈ôedp≈ôipraven√Ω k√≥d. Tj. prvn√≠ ≈ô√°dek k√≥du v√°m zobraz√≠
# ok√©nko, do kter√©ho vp√≠≈°ete vzorov√Ω vstup (nebo jin√Ω vstup), a zadan√© hodnoty se ulo≈æ√≠
# do promƒõnn√Ω

""" a = float(input("Napis zde prvni stranu obdelnika"))
b = float(input("Napis zde druhou stranu obdelnika"))

def obvod(a, b):
    obvod = 2*a + 2*b
    return obvod

def obsah(a, b):
    obsah = a * b
    return obsah


vypocitany_obvod = obvod(a, b)
vypocitany_obsah = obsah(a, b)

print(f"Zde jsou tve vypocty, obsah obdelnika je {vypocitany_obsah} a jeho obvod je {vypocitany_obvod}") """

print("  * ********************************************************* * ")
######################################################################################################

# Cviƒçen√≠ 2.2: Pravo√∫hl√Ω troj√∫heln√≠k
# Mƒõjme pravo√∫hl√Ω troj√∫heln√≠k ùê¥ùêµùê∂ s odvƒõsnami ùëé, ùëè a p≈ôeponou ùëê. Pro √∫hel ùõº plat√≠ tyto
# vztahy:
# sin ùõº =
# ùëé
# ùëê
# cos ùõº =
# ùëè
# ùëê
# tan ùõº =
# ùëé
# ùëè
# √ökol:
# Ze zadan√Ωch d√©lek odvƒõsen a, b spoƒç√≠tejte velikost √∫hlu ùõº ve stupn√≠ch. V√Ωsledek ulo≈æte
# do promƒõnn√© alpha. (O vstup a v√Ωstup se star√° p≈ôedp≈ôipraven√Ω k√≥d.)
# Vzorov√Ω vstup:
# 10 20
# Vzorov√Ω v√Ωstup:
# 26.565




print("  * ********************************************************* * ")
######################################################################################################
""" a = float(input("Zadej odvesnu a: \n"))
b = float(input("Zadej odvesnu b: \n"))
c = float(input("Zadej preponu c: \n"))


sin_alfa = a/c
cos_alfa = b/c
tg_alfa = a/b

print(math.sin(sin_alfa))
print(math.cos(cos_alfa))
print(math.tan(tg_alfa))
print("*********************************************")
print(math.degrees(sin_alfa))
print(math.degrees(cos_alfa))
print(math.degrees(tg_alfa))
 """

print("  * ********************************************************* * ")
######################################################################################################

# Cviƒçen√≠ 2.3: Obl√≠ben√© ƒç√≠slo
# Alice, Bob a Cyril si chtƒõj√≠ vybrat spoleƒçn√© obl√≠ben√© ƒç√≠slo.
# ‚Ä¢ Alici se l√≠b√≠ dvoucifern√° ƒç√≠sla, kter√° obsahuj√≠ ƒçty≈ôku.
# ‚Ä¢ Bobovi se l√≠b√≠ ƒç√≠sla dƒõliteln√° t≈ôemi.
# ‚Ä¢ Cyrilovi se l√≠bi v≈°echna ƒç√≠sla kromƒõ n√°sobk≈Ø sedmi
 
from random import randint
####

""" cislo = randint(1, 21)
print(cislo) 

def alice_fnc_ctyrka():

    #tohle je podminka na 4 v cisle
    alice_ctyrka = str(cislo)
    if "4" in alice_ctyrka:
        return True
    return False
   

def alice_fnc():
    alice = cislo
    if alice >= 10 and alice <=30:  
        return True
    return False
    
def bob_fnc():
    bob = cislo
    if bob % 3 == 0:
        return True
    return False
    
def cyril_fnc():
    cyril  = cislo
    if cyril % 7 != 0:
        return True
    return False

def vsichni_spokojeni(cislo):   
    if (alice_fnc() and bob_fnc() and cyril_fnc() and alice_fnc_ctyrka()):

        return True
    return False

while True:
    cislo = randint(1, 30)
    print(cislo)
    
    if vsichni_spokojeni(cislo):
        print(f"Nalezeno po≈æadovan√© ƒç√≠slo: {cislo}")
        break """

print("  * ********************************************************* * ")
######################################################################################################


#     Povinn√© dom√°c√≠ √∫koly
# D√ö 2.1: Obvod troj√∫heln√≠ku
# √ökol:
# Vypoƒç√≠tejte obvod troj√∫heln√≠ku se stranami o d√©lk√°ch a, b, c. V√Ωsledek ulo≈æte do
# promƒõnn√© o.
# Vzorov√Ω vstup:
# 2 3 4

""" a = int(input("Napis mi zde stranu a : \n "))
b = int(input("Napis mi zde stranu b: \n "))
c = int(input("Napis i zde stranu c: \n"))
5
def obvod_trojuhlenika(a, b, c):
    o = a + b + c
    return o

print(f" Obvod trojuhlenika je : {obvod_trojuhlenika(a, b, c)}") """
print("  * ********************************************************* * ")
######################################################################################################

# D√ö 2.2: Objem ku≈æele
# √ökol:
# Vypoƒç√≠tejte objem ku≈æele s polomƒõrem podstavy r a v√Ω≈°kou v. V√Ωsledek ulo≈æte to
# promƒõnn√© V.
# ùëâ = 1
# 3
# ‚ãÖ ùúã ‚ãÖ ùëü2
# ‚ãÖ ùë£
# Vzorov√Ω vstup:
# 3.5 12.0

""" from math import pi

polomer_podstavy = float(input("Zadej polomer podstavy: \n"))
vyska_kuzele = float(input("Zadej vysku kuzele: \n"))

V = 1/3 * (pi * polomer_podstavy ** 2 * vyska_kuzele)

print(round(V, 2)) """

print("  * ********************************************************* * ")
######################################################################################################

# D√ö 2.3: Pythagorova vƒõta
# √ökol:
# Vypoƒç√≠tejte d√©lku p≈ôepony c pravo√∫hl√©ho troj√∫heln√≠ku z d√©lek odvƒõsen a, b podle
# Pythagorovy vƒõty:
# ùëé
# 2 + ùëè2 = ùëê2

""" from math import sqrt
a = float(input("Napis delku odvesny a: \n"))
b = float(input("Napis delku odvesny b: \n"))
c = sqrt(a ** 2 + b **2)
print(round(c, 2)) """

print("  * ********************************************************* * ")
######################################################################################################

# D√ö 2.4: P≈ôepoƒçet ƒçasu
# √ökol:
# ƒåas t (v sekund√°ch) vyj√°d≈ôete jako poƒçet cel√Ωch hodin, minut a sekund. V√Ωsledek
# ulo≈æte do promƒõnn√Ωch hours, minutes, seconds. (O hezk√Ω v√Ωpis se postar√° p≈ôed p≈ôipraven√Ω posledn√≠ ≈ô√°dek.)
# N√°povƒõda: vyu≈æijte oper√°tory // a %.
# Vzorov√Ω vstup 1: ‚ÄÉ Vzorov√Ω vstup 2: ‚ÄÉ
# 90 3600
# Vzorov√Ω v√Ωstup 1: ‚ÄÉ Vzorov√Ω v√Ωstup 2: ‚ÄÉ
# 0:01:30 1:00:00



t = int(input("Zde mi napis sekund, a ja ti reknu kolik je to hodin a minut a sekund to je: \n"))

hours = t // 3600
zbytek_h = t - (hours *3600)
minutes = zbytek_h // 60
seconds = zbytek_h -(60 * minutes)



print(hours)
print(minutes)
print(seconds)

print(f'{hours}:{minutes:02}:{seconds:02}')
      
print("  * ********************************************************* * ")
######################################################################################################

""" D√°le v√°s pros√≠m, aby jste nahr√°vali sv√© dom√°c√≠ √∫koly pod n√°zvem du_x.ipynb, kde
x je ƒç√≠slo p≈ôedn√°≈°ky na kter√© byl dom√°c√≠ √∫kol zad√°n. Zkr√°tka tak, jak je ps√°no v
interaktivn√≠ osnovƒõ. V opaƒçn√©m p≈ô√≠padƒõ nejsem schopen zaruƒçit, ≈æe body za dom√°c√≠
√∫koly dostanete, proto≈æe moje skripty na opravov√°n√≠ dom√°c√≠ch √∫kolu mohou m√≠t
pot√≠≈æe.
 """
